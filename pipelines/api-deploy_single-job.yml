# Pipeline for apig staging

trigger: none

variables:
- group: wm_test_apigw_staging_common
- group: wm_test_apigw_staging_security_alias_creds_common

pool:
  name: '$(agent_pool)'
  vmImage: '$(agent_pool_vmImage)'

# To do: Add apiProject as pipeline parameters (vs. pipeline variable)
# parameters:
# - name: apiProject
#   type: string
#   default: 'petstore'

steps:
- checkout: self
  submodules: "true"
  persistCredentials: "true"

- bash: |
    echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_DEV"
  condition: and(succeeded(), eq(variables['target_type'], 'DEV'))

- bash: |
    echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_STAGE"
  condition: and(succeeded(), eq(variables['target_type'], 'STAGE'))

- bash: |
    echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_PROD"
  condition: and(succeeded(), eq(variables['target_type'], 'PROD'))

- template: /pipelines/api-build-template.yml  # Template reference
  parameters:
    apiProject: $(apiProject)
    build_environment: $(environment_build)
    target_type: $(target_type)
    prep_condition: in(variables['target_type'], 'STAGE', 'PROD')
    test_condition: in(variables['target_type'], 'STAGE', 'PROD')

- template: /pipelines/api-deploy-template.yml  # Template reference
  parameters:
    apiProject: $(apiProject)
    target_environment: $(target_environment)
    target_type: $(target_type)
    prep_condition: in(variables['target_type'], 'STAGE', 'PROD')
    test_condition: in(variables['target_type'], 'STAGE', 'PROD')