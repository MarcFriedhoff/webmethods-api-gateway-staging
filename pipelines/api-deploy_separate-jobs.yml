# Pipeline for apig staging

trigger: none

# To do: Add apiProject as pipeline parameters (vs. pipeline variable)
# parameters:
# - name: apiProject
#   type: string
#   default: 'petstore'

variables:
- group: wm_test_apigw_staging_artifactory

jobs:
- job: Build_for_DEV
  variables:
  - group: wm_test_apigw_staging_build
  - group: wm_test_apigw_staging_security_alias_creds_dev
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/api-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment)
      target_type: DEV
      prep_condition: ${{false}}
      test_condition: ${{false}}
  - template: /pipelines/store-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_type: DEV
      prep_condition: ${{false}}
      test_condition: ${{false}}
  condition: eq(variables['target_type'], 'DEV')

- job: Deploy_to_DEV
  variables:
  - group: wm_test_apigw_staging_dev
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - template: /pipelines/retrieve-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_type: DEV
      prep_condition: ${{false}}
      test_condition: ${{false}}
  - template: /pipelines/api-deploy-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_environment: $(environment)
      target_type: DEV
      prep_condition: ${{false}}
      test_condition: ${{false}}
  dependsOn: Build_for_DEV
  condition: succeeded()

- job: Build_for_STAGE
  variables:
  - group: wm_test_apigw_staging_build
  - group: wm_test_apigw_staging_security_alias_creds_stage
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/api-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment)
      target_type: STAGE
      prep_condition: ${{true}}
      test_condition: ${{true}}
  - template: /pipelines/store-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_type: STAGE
      prep_condition: ${{true}}
      test_condition: ${{true}}
  condition: eq(variables['target_type'], 'STAGE')

- job: Deploy_to_STAGE
  variables:
  - group: wm_test_apigw_staging_stage
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - template: /pipelines/retrieve-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_type: STAGE
      prep_condition: ${{true}}
      test_condition: ${{true}}
  - template: /pipelines/api-deploy-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_environment: $(environment)
      target_type: STAGE
      prep_condition: ${{true}}
      test_condition: ${{true}}
  dependsOn: Build_for_STAGE
  condition: succeeded()

- job: Build_for_PROD
  variables:
  - group: wm_test_apigw_staging_build
  - group: wm_test_apigw_staging_security_alias_creds_prod
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/api-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment)
      target_type: PROD
      prep_condition: ${{true}}
      test_condition: ${{true}}
  - template: /pipelines/store-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_type: PROD
      prep_condition: ${{true}}
      test_condition: ${{true}}
  condition: eq(variables['target_type'], 'PROD')

- job: Deploy_to_PROD
  variables:
  - group: wm_test_apigw_staging_prod
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - template: /pipelines/retrieve-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_type: PROD
      prep_condition: ${{true}}
      test_condition: ${{true}}
  - template: /pipelines/api-deploy-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_environment: $(environment)
      target_type: PROD
      prep_condition: ${{true}}
      test_condition: ${{true}}
  dependsOn: Build_for_PROD
  condition: succeeded()