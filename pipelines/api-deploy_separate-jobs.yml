# Pipeline for apig staging

trigger: none

# To do: Add apiProject as pipeline parameters (vs. pipeline variable)
# parameters:
# - name: apiProject
#   type: string
#   default: 'petstore'

variables:
- group: wm_test_apigw_staging

jobs:
- job: Build
  pool:
    name: '$(agent_pool_build)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - bash: |
      echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_DEV"
      echo "##vso[task.setvariable variable=agent_pool_target]$AGENT_POOL_DEV"
    condition: and(succeeded(), eq(variables['target_type'], 'DEV'))
  - bash: |
      echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_STAGE"
      echo "##vso[task.setvariable variable=agent_pool_target]$AGENT_POOL_STAGE"
    condition: and(succeeded(), eq(variables['target_type'], 'STAGE'))
  - bash: |
      echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_PROD"
      echo "##vso[task.setvariable variable=agent_pool_target]$AGENT_POOL_PROD"
    condition: and(succeeded(), eq(variables['target_type'], 'PROD'))
  - template: /pipelines/api-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment_build)
      target_environment: $(target_environment)
      target_type: $(target_type)
      prep_condition: in(variables['target_type'], 'STAGE', 'PROD')
      test_condition: in(variables['target_type'], 'STAGE', 'PROD')

- job: Deploy
  pool:
    name: '$(agent_pool_target)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - bash: |
      echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_DEV"
    condition: and(succeeded(), eq(variables['target_type'], 'DEV'))
  - bash: |
      echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_STAGE"
    condition: and(succeeded(), eq(variables['target_type'], 'STAGE'))
  - bash: |
      echo "##vso[task.setvariable variable=target_environment]$ENVIRONMENT_PROD"
    condition: and(succeeded(), eq(variables['target_type'], 'PROD'))
  - template: /pipelines/api-deploy-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment_build)
      target_environment: $(target_environment)
      target_type: $(target_type)
      prep_condition: in(variables['target_type'], 'STAGE', 'PROD')
      test_condition: in(variables['target_type'], 'STAGE', 'PROD')
  dependsOn: Build
  condition: succeeded()