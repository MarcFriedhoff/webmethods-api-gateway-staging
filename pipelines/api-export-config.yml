# Pipeline for apig staging

trigger: none

# To do: Add commit-message and source_type as pipeline parameters (vs. pipeline variable)
# parameters:
# - name: commit-message
#   type: string
# - name: source_type
#   type: string
#   default: 'CONFIG'

variables:
  ${{ if startsWith(variables['Build.DefinitionName'], 'wm_test_apigw_staging') }}:
    tenant: playground
  ${{ if startsWith(variables['Build.DefinitionName'], 'wm_apigw_staging') }}:
    tenant: realworld

jobs:
- job: Export_from_CONFIG
  variables:
  - template: /${{variables.tenant}}/variables/CONFIG/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: CONFIG
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'CONFIG')

- job: Export_from_BUILD
  variables:
  - template: /${{variables.tenant}}/variables/BUILD/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: BUILD
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'BUILD')

- job: Export_from_DEV_INT
  variables:
  - template: /${{variables.tenant}}/variables/DEV-INT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: DEV-INT
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'DEV-INT')

- job: Export_from_DEV_EXT
  variables:
  - template: /${{variables.tenant}}/variables/DEV-EXT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: DEV-EXT
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'DEV-EXT')

- job: Export_from_STAGE_INT
  variables:
  - template: /${{variables.tenant}}/variables/STAGE-INT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: STAGE-INT
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'STAGE-INT')

- job: Export_from_STAGE_EXT
  variables:
  - template: /${{variables.tenant}}/variables/STAGE-EXT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: STAGE-EXT
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'STAGE-EXT')

- job: Export_from_PROD_INT
  variables:
  - template: /${{variables.tenant}}/variables/PROD-INT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: PROD-INT
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'PROD-INT')

- job: Export_from_PROD_EXT
  variables:
  - template: /${{variables.tenant}}/variables/PROD-EXT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: PROD-EXT
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference
  condition: eq(variables['source_type'], 'PROD-EXT')